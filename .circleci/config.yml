# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
        environment:
          CC_TEST_REPORTER_ID: c1a64ac787169d1117a84825b352a83fb9aefc6fa5aa6a72753e3ecd5587a950
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: css_testing
          MYSQL_USER: user
          MYSQL_PASSWORD: circleci
      - image: logicalspark/docker-tikaserver
        ports:
            - "9998:9998"

    working_directory: ~/laravel/src/project-css

    steps:
      - checkout:
          path: ~/laravel

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip
            sudo docker-php-ext-install pdo_mysql
            sudo apt install -y default-mysql-client            

      - run: sudo composer self-update

      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #       # "composer.lock" can be used if it is committed to the repo
      #       - v1-dependencies-{{ checksum "composer.json" }}
      #       # fallback to using the latest cache if no exact match is found
      #       - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install -n --prefer-dist

      # - save_cache:
      #     key: v1-dependencies-{{ checksum "composer.json" }}
      #     paths:
      #       - ./vendor

      # prepare the database
      - run:
          name: "Create Environment file and generate app key"
          command: |
            mv .env.circleci .env
            php artisan key:generate

      - run:
          name: "Create database and run migration"
          command: |
            php artisan migrate

      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # run tests with phpunit
      - run:
          name: "Run Tests"
          command: ./vendor/bin/phpunit --coverage-clover clover.xml
                   ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?          